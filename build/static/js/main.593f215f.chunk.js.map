{"version":3,"sources":["constants.js","components/Account/index.js","components/Order/AssetMetadata.js","components/Order/BundleMetadata.js","components/common/SalePrice.js","components/Order/index.js","components/Asset/AssetMetadata.js","components/Asset/BundleMetadata.js","components/Asset/index.js","components/Log/index.js","components/Header/index.js","components/pages/Home/index.js","components/pages/MyArt/index.js","components/pages/Collectibles/index.js","components/pages/Contact/index.js","components/Main/index.js","components/Navigation/index.js","components/App/index.js","registerServiceWorker.js","index.js"],"names":["DEFAULT_DECIMALS","web3Provider","web3","window","currentProvider","Web3","HttpProvider","networkCallbacks","onNetworkUpdate","callback","push","connectWallet","_connectWallet","apply","this","arguments","_callee","errorMessage","regenerator_default","a","wrap","_context","prev","next","PortisProvider","ethereum","enable","alert","Error","map","c","stop","Account","_this$props","props","account","showImage","_username","user","username","_address","address","displayName","substring","MAX_ADDR_LEN","toUpperCase","react_default","createElement","target","rel","href","concat","style","backgroundImage","image","React","Component","AssetMetadata","asset","Fragment","className","openseaLink","alt","src","imageUrl","name","BundleMetadata","bundle","permalink","DivImgWrapper","assets","i","key","imageUrlThumbnail","description","externalLink","styled","div","_templateObject","SalePrice","order","currentPrice","paymentTokenContract","price","baseAmount","tokenContract","length","undefined","decimals","BigNumber","toString","pow","toUnitAmount","priceLabel","parseFloat","toLocaleString","minimumSignificantDigits","isETH","symbol","SpanSalePrice","span","SalePrice_templateObject","Card","attrs","Order_templateObject","BundleMetadata_templateObject","Asset_templateObject","Asset","state","creatingOrder","error","_this2","setState","message","setTimeout","console","log","owner","Asset_Card","Asset_AssetMetadata_AssetMetadata","assetContract","Log","orders","total","side","onlyForMe","onlyByMe","onlyBundles","page","fetchData","fetchDataAssets","accountAddress","seaport","api","getOrders","maker","bundled","asset_contract_address","count","getAssets","tokenId","_this3","OrderSide","Buy","_this4","_this5","Sell","_this6","_this7","_this$state","ordersPerPage","pageSize","noMorePages","onClick","paginateTo","tabIndex","_this8","_this$state2","sellSide","buySide","role","type","data-toggle","toggleSide","toggleForMe","toggleByMe","toggleBundles","_this9","id","Log_Header","class","Asset_Asset","Object","assign","Header","header","Log_templateObject","section","_templateObject2","Home","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onChangeAddress","OpenSeaPort","networkName","Network","Main","eth","getAccounts","err","res","Header_Header","Home_Section","Log_Log","Section","img","Home_templateObject","Home_templateObject2","MyArt","Collectibles","Collectibles_Section","Collectibles_templateObject","Collectibles_templateObject2","Contact","Contact_Section","Contact_templateObject","Contact_templateObject2","react_router","exact","path","component","Navigation","react_router_dom","to","App","Navigation_Navigation","Main_Main","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","gtag","dataLayer","Date","ReactDOM","render","App_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.593f215f.chunk.js","sourcesContent":["import * as Web3 from 'web3'\nimport BigNumber from 'bignumber.js'\nimport { PortisProvider } from 'portis'\n\nexport const GOOGLE_ANALYTICS_ID = 'UA-111688253-4'\nexport const OPENSEA_URL = \"https://opensea.io\"\nexport const OPENSEA_JS_URL = \"https://github.com/ProjectOpenSea/opensea-js\"\nexport const GITHUB_URL = \"https://github.com/ProjectOpenSea/ships-log\"\nexport const DEFAULT_DECIMALS = 18\nexport let web3Provider = typeof web3 !== 'undefined'\n  ? window.web3.currentProvider\n  : new Web3.providers.HttpProvider('https://mainnet.infura.io')\n\n// Replace this with Redux for more complex logic\nconst networkCallbacks = []\nexport const onNetworkUpdate = (callback) => {\n  networkCallbacks.push(callback)\n}\n\nexport async function connectWallet() {\n  if (!window.web3) {\n    web3Provider = new PortisProvider({\n      // Put your Portis API key here\n    })\n  } else if (window.ethereum) {\n    window.ethereum.enable()\n  } else {\n    const errorMessage = 'You need an Ethereum wallet to interact with this marketplace. Unlock your wallet, get MetaMask.io or Portis on desktop, or get Trust Wallet or Coinbase Wallet on mobile.'\n    alert(errorMessage)\n    throw new Error(errorMessage)\n  }\n  networkCallbacks.map((c) => c(web3Provider))\n}\n\nexport function toUnitAmount(baseAmount, tokenContract = null) {\n  const decimals = tokenContract && tokenContract.decimals != null\n    ? tokenContract.decimals\n    : DEFAULT_DECIMALS\n\n  const amountBN = new BigNumber(baseAmount.toString())\n  return amountBN.div(new BigNumber(10).pow(decimals))\n}\n\nexport function toBaseUnitAmount(unitAmount, tokenContract = null) {\n  const decimals = tokenContract && tokenContract.decimals != null\n    ? tokenContract.decimals\n    : DEFAULT_DECIMALS\n\n  const amountBN = new BigNumber(unitAmount.toString())\n  return amountBN.times(new BigNumber(10).pow(decimals))\n}\n\nexport async function promisify(inner) {\n  return new Promise((resolve, reject) =>\n    inner((err, res) => {\n      if (err) { reject(err) }\n      resolve(res)\n    })\n  )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { OPENSEA_URL } from '../../constants';\nconst MAX_ADDR_LEN = 6\n\nexport default class Account extends React.Component {\n\n  static propTypes = {\n    account: PropTypes.shape({\n      address: PropTypes.string.isRequired,\n      user: PropTypes.shape({\n        username: PropTypes.string.isRequired\n      })\n    }).isRequired,\n    showImage: PropTypes.bool\n  }\n\n  render() {\n    const { account, showImage } = this.props;\n    const _username = account.user\n      ? account.user.username\n      : null;\n    const _address = account.address;\n    const displayName = _username ? _username : _address.substring(2, MAX_ADDR_LEN + 2).toUpperCase();\n\n    return (\n      <a target=\"_blank\" rel=\"noopener noreferrer\" href={`${OPENSEA_URL}/accounts/${_address}`}>\n        {showImage && account\n          ? <div style={{backgroundImage:'url(\"'+account.image+'\")'}} />\n          : null\n        }\n        <span>{displayName}</span>\n      </a>\n    )\n  }\n}\n","import React from 'react'\n\nexport default class AssetMetadata extends React.Component {\n  render() {\n    const { asset } = this.props\n\n    return (\n      <React.Fragment>\n        <a target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-center d-inline-block m-100\" href={asset.openseaLink}>\n          <img\n            alt=\"Asset artwork\"\n            src={asset.imageUrl} />\n        </a>\n          \n        <div className=\"card-body h-25\">\n        <a target=\"_blank\" href={asset.openseaLink}><h5 className=\"card-title\">{asset.name}</h5></a>\n        </div>\n      </React.Fragment>\n    )\n  }\n}","import React from 'react'\nimport styled from 'styled-components';\n\nexport default class BundleMetadata extends React.Component {\n  render() {\n    const { bundle } = this.props\n\n    return (\n      <React.Fragment>\n        <a target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-center d-inline-block m-100\" href={bundle.permalink}>\n          <DivImgWrapper>\n            {bundle.assets.map((asset, i) =>\n              <img\n                className=\"small\"\n                alt=\"Asset Bundle artwork\"\n                key={i}\n                src={asset.imageUrlThumbnail || asset.imageUrl} />\n            )}\n          </DivImgWrapper>\n        </a>\n          \n        <div className=\"card-body h-25\">\n        <a target=\"_blank\" href={bundle.permalink}><h5 className=\"card-title\">{bundle.name}</h5></a>\n          <p className=\"card-text text-truncate\">\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href={bundle.permalink} className=\"card-link\">\n              {bundle.description}\n              <br />\n              {bundle.externalLink}\n            </a>\n          </p>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nconst DivImgWrapper = styled.div`\n  min-height: 120px;\n  max-height: 240px;\n  overflow-y: auto;\n  padding: 5px 0;\n`","import React from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\nimport { toUnitAmount } from '../../constants';\n\nexport default class SalePrice extends React.Component {\n  static propTypes = {\n    order: PropTypes.object.isRequired\n  }\n\n  render() {\n    const { order } = this.props\n    const { currentPrice, paymentTokenContract } = order\n    const price = toUnitAmount(currentPrice, paymentTokenContract)\n    const priceLabel = parseFloat(price).toLocaleString(undefined, { minimumSignificantDigits: 1 })\n    const isETH = paymentTokenContract.symbol === \"ETH\"\n\n    return (\n      <SpanSalePrice>\n        {isETH\n          ? \"Ξ\"\n          : null\n        }\n        {priceLabel} {isETH ? null : paymentTokenContract.symbol}\n      </SpanSalePrice>\n    )\n  }\n}\n\nconst SpanSalePrice = styled.span`\n  img {\n    height: 15px !important;\n  }\n`","import React from 'react'\nimport moment from 'moment'\nimport PropTypes from 'prop-types'\nimport Account from '../Account'\nimport AssetMetadata from './AssetMetadata'\nimport BundleMetadata from './BundleMetadata'\nimport styled from 'styled-components';\nimport { connectWallet } from '../../constants';\nimport { OrderSide } from 'opensea-js/lib/types';\nimport SalePrice from '../common/SalePrice';\n\nconst Card = styled.div.attrs({ className: \"card mx-2 mb-4\" })`\n  min-width: 200px;\n  img {\n    height: 200px;\n    max-width: 100%;\n  }\n  img.small {\n    max-width: 50%;\n    height: 60px;\n  }\n  a h5.card-title{\n    color : #000;\n    text-align : center;\n  }\n`\n\nexport default class Order extends React.Component {\n\n  state = {\n    errorMessage: null,\n    creatingOrder: false\n  }\n\n  static propTypes = {\n    currentAccount: PropTypes.object,\n    order: PropTypes.shape({\n      makerAccount: PropTypes.object.isRequired\n    }).isRequired,\n    seaport: PropTypes.object.isRequired,\n    accountAddress: PropTypes.string\n  }\n\n  onError(error) {\n    // Ideally, you'd handle this error at a higher-level component\n    // using props or Redux\n    this.setState({ errorMessage: error.message })\n    setTimeout(() => this.setState({errorMessage: null}), 3000)\n    throw error\n  }\n\n  async fulfillOrder() {\n    const { order, accountAddress } = this.props\n    if (!accountAddress) {\n      await connectWallet()\n    }\n    try {\n      this.setState({ creatingOrder: true })\n      await this.props.seaport.fulfillOrder({ order, accountAddress })\n    } catch(error) {\n      this.onError(error)\n    } finally {\n      this.setState({ creatingOrder: false })\n    }\n  }\n\n  renderBuyButton(canAccept = true) {\n    const { creatingOrder } = this.state\n    const { accountAddress, order } = this.props\n    const buyAsset = async () => {\n      if (accountAddress && !canAccept) {\n        this.setState({\n          errorMessage: \"You already own this asset!\"\n        })\n        return\n      }\n      this.fulfillOrder()\n    }\n    return (\n      <button\n        disabled={creatingOrder}\n        onClick={buyAsset}\n        className=\"btn btn-primary w-100\">\n        \n        Buy{creatingOrder ? \"ing\" : \"\"} for <SalePrice order={order} />\n\n      </button>\n    )\n  }\n\n  renderAcceptOfferButton(canAccept = true) {\n    const { creatingOrder } = this.state\n    const { accountAddress, order } = this.props\n    \n    const sellAsset = async () => {\n      if (accountAddress && !canAccept) {\n        this.setState({\n          errorMessage: \"You do not own this asset!\"\n        })\n        return\n      }\n      this.fulfillOrder()\n    }\n    return (\n      <button\n        disabled={creatingOrder}\n        onClick={sellAsset}\n        className={`btn btn-success w-100`}>\n\n        Sell{creatingOrder ? \"ing\" : \"\"} for <SalePrice order={order} />\n\n      </button>\n    )\n  }\n\n  renderExpirationBadge() {\n    const expirationTime = parseFloat(this.props.order.expirationTime)\n\n    if (expirationTime <= 0) {\n      return null;\n    }\n\n    const timeLeft = moment.duration(moment.unix(expirationTime).diff(moment()))\n\n    return (\n      <span className=\"badge bid-expiry-badge red\">\n        <i className=\"tiny material-icons\">timer</i>\n        <span className=\"expire-label\">Expires in </span>\n        {timeLeft.humanize()}\n      </span>\n    )\n  }\n\n  render() {\n    const { errorMessage } = this.state\n    const { order, accountAddress } = this.props\n    const { makerAccount, listingTime, asset, assetBundle } = order\n    console.log(\"ORDER : \", asset);\n    const owner = asset\n      ? asset.owner\n      : assetBundle.assets[0].owner\n\n    const ts = listingTime.toNumber() * 1000\n    const timeLabel = moment(ts).local().fromNow()\n    const isOwner = accountAddress && accountAddress.toLowerCase() === owner.address.toLowerCase()\n\n    console.log(order)\n    return (\n      <div>\n      <Card>\n        {asset\n          ? <AssetMetadata asset={asset} /> \n          : <BundleMetadata bundle={assetBundle} />\n        }\n        \n        <ul className=\"list-group list-group-flush\">\n          <li className=\"list-group-item\">\n            Offered by <Account account={makerAccount} />\n          </li>\n          { errorMessage\n            ? <div className=\"alert alert-warning mb-0\" role=\"alert\">\n                {errorMessage}\n              </div>\n            : <li className=\"list-group-item\">\n                {order.side === OrderSide.Buy\n                  ? this.renderAcceptOfferButton(isOwner)\n                  : null\n                }\n                {order.side === OrderSide.Sell\n                  ? this.renderBuyButton(!isOwner)\n                  : null\n                }\n              </li>\n          }\n        </ul>\n        <div className=\"card-footer\">\n          <small className=\"text-muted\">Posted {timeLabel}</small>\n        </div>\n      </Card>\n      </div>\n    )\n  }\n}\n","import React from 'react'\n\nexport default class AssetMetadata extends React.Component {\n  render() {\n    const { asset } = this.props\n\n    return (\n      <React.Fragment>\n        <a target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-center d-inline-block m-100\" href={asset.openseaLink}>\n          <img\n            alt=\"Asset artwork\"\n            src={asset.imageUrl} />\n        </a>\n          \n        <div className=\"card-body h-25\">\n        <a target=\"_blank\" href={asset.openseaLink}><h5 className=\"card-title\">{asset.name}</h5></a>\n        </div>\n      </React.Fragment>\n    )\n  }\n}","import React from 'react'\nimport styled from 'styled-components';\n\nexport default class BundleMetadata extends React.Component {\n  render() {\n    const { bundle } = this.props\n\n    return (\n      <React.Fragment>\n        <a target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-center d-inline-block m-100\" href={bundle.permalink}>\n          <DivImgWrapper>\n            {bundle.assets.map((asset, i) =>\n              <img\n                className=\"small\"\n                alt=\"Asset Bundle artwork\"\n                key={i}\n                src={asset.imageUrlThumbnail || asset.imageUrl} />\n            )}\n          </DivImgWrapper>\n        </a>\n          \n        <div className=\"card-body h-25\">\n        <a target=\"_blank\" href={bundle.permalink}><h5 className=\"card-title\">{bundle.name}</h5></a>\n          <p className=\"card-text text-truncate\">\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href={bundle.permalink} className=\"card-link\">\n              {bundle.description}\n              <br />\n              {bundle.externalLink}\n            </a>\n          </p>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nconst DivImgWrapper = styled.div`\n  min-height: 120px;\n  max-height: 240px;\n  overflow-y: auto;\n  padding: 5px 0;\n`","import React from 'react'\nimport moment from 'moment'\nimport PropTypes from 'prop-types'\nimport Account from '../Account'\nimport AssetMetadata from './AssetMetadata'\nimport BundleMetadata from './BundleMetadata'\nimport styled from 'styled-components';\nimport { connectWallet } from '../../constants';\nimport { OrderSide } from 'opensea-js/lib/types';\nimport SalePrice from '../common/SalePrice';\n\nconst Card = styled.div.attrs({ className: \"card mx-2 mb-4\" })`\n  min-width: 200px;\n  img {\n    height: 200px;\n    max-width: 100%;\n  }\n  img.small {\n    max-width: 50%;\n    height: 60px;\n  }\n  a h5.card-title{\n    color : #000;\n    text-align : center;\n  }\n`\n\nexport default class Asset extends React.Component {\n\n  state = {\n    errorMessage: null,\n    creatingOrder: false\n  }\n\n  static propTypes = {\n    currentAccount: PropTypes.object,\n    asset: PropTypes.object.isRequired,\n    seaport: PropTypes.object.isRequired,\n    accountAddress: PropTypes.string\n  }\n\n  onError(error) {\n    // Ideally, you'd handle this error at a higher-level component\n    // using props or Redux\n    this.setState({ errorMessage: error.message })\n    setTimeout(() => this.setState({errorMessage: null}), 3000)\n    throw error\n  }\n\n  /*async fulfillOrder() {\n    const { order, accountAddress } = this.props\n    if (!accountAddress) {\n      await connectWallet()\n    }\n    try {\n      this.setState({ creatingOrder: true })\n      await this.props.seaport.fulfillOrder({ order, accountAddress })\n    } catch(error) {\n      this.onError(error)\n    } finally {\n      this.setState({ creatingOrder: false })\n    }\n  }\n\n  renderBuyButton(canAccept = true) {\n    const { creatingOrder } = this.state\n    const { accountAddress, order } = this.props\n    const buyAsset = async () => {\n      if (accountAddress && !canAccept) {\n        this.setState({\n          errorMessage: \"You already own this asset!\"\n        })\n        return\n      }\n      this.fulfillOrder()\n    }\n    return (\n      <button\n        disabled={creatingOrder}\n        onClick={buyAsset}\n        className=\"btn btn-primary w-100\">\n        \n        Buy{creatingOrder ? \"ing\" : \"\"} for <SalePrice order={order} />\n\n      </button>\n    )\n  }\n\n  renderAcceptOfferButton(canAccept = true) {\n    const { creatingOrder } = this.state\n    const { accountAddress, order } = this.props\n    \n    const sellAsset = async () => {\n      if (accountAddress && !canAccept) {\n        this.setState({\n          errorMessage: \"You do not own this asset!\"\n        })\n        return\n      }\n      this.fulfillOrder()\n    }\n    return (\n      <button\n        disabled={creatingOrder}\n        onClick={sellAsset}\n        className={`btn btn-success w-100`}>\n\n        Sell{creatingOrder ? \"ing\" : \"\"} for <SalePrice order={order} />\n\n      </button>\n    )\n  }\n\n  renderExpirationBadge() {\n    const expirationTime = parseFloat(this.props.order.expirationTime)\n\n    if (expirationTime <= 0) {\n      return null;\n    }\n\n    const timeLeft = moment.duration(moment.unix(expirationTime).diff(moment()))\n\n    return (\n      <span className=\"badge bid-expiry-badge red\">\n        <i className=\"tiny material-icons\">timer</i>\n        <span className=\"expire-label\">Expires in </span>\n        {timeLeft.humanize()}\n      </span>\n    )\n  }*/\n\n  render() {\n    const { errorMessage } = this.state\n    const { asset } = this.props\n\n    console.log(\"ICI : \", asset)\n    const owner = asset.owner\n    return (\n      <div>\n      <Card>\n        <AssetMetadata asset={asset} /> \n        \n        <ul className=\"list-group list-group-flush\">\n          <li className=\"list-group-item\">\n            Owned by {owner.user.username}\n          </li>\n        </ul>\n        <div className=\"card-footer\">\n          <small className=\"text-muted\">Collection : {asset.assetContract.name}</small>\n        </div>\n      </Card>\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport Order from '../Order';\nimport Asset from '../Asset';\nimport { OrderSide, OpenSeaAsset } from 'opensea-js/lib/types';\nimport { connectWallet } from '../../constants';\n\nexport default class Log extends React.Component {\n  static propTypes = {\n    seaport: PropTypes.object.isRequired,\n    accountAddress: PropTypes.string\n  };\n\n  state = {\n    orders: undefined,\n    assets : undefined,\n    total: 0,\n    side: undefined,\n    onlyForMe: false,\n    onlyByMe: false,\n    onlyBundles: false,\n    page: 1\n  };\n\n  componentDidMount() {\n    this.fetchData();\n    this.fetchDataAssets();\n  }\n\n  async fetchData() {\n    const { accountAddress } = this.props\n    const { orders, count } = await this.props.seaport.api.getOrders({\n      maker: this.state.onlyByMe ? accountAddress : undefined,\n      owner: this.state.onlyForMe ? accountAddress : undefined,\n      side: this.state.side,\n      bundled: this.state.onlyBundles ? true : undefined,\n      // Possible query options:\n      //asset_contract_address : '0x91b16d509aa3377a526cd0794b8ff7dcfc84fcdf',\n      asset_contract_address : '0x495f947276749ce646f68ac8c248420045cb7b5e'\n      // 'taker'\n      //token_id : '43181488428587264351855320964023839419292599949489173029142631053139820675073'\n      //token_ids\n      // 'sale_kind'\n      \n    }, this.state.page)\n\n    console.log('ORDERS : ', orders);\n    this.setState({ orders, total: count})\n    \n  }\n\n  async fetchDataAssets(){\n    const { accountAddress } = this.props\n    const { assets, count } = await this.props.seaport.api.getAssets({\n      asset_contract_address : '0x91b16d509aa3377a526cd0794b8ff7dcfc84fcdf',\n      //tokenAdress : '0x495f947276749ce646f68ac8c248420045cb7b5e',\n      tokenId : null,\n    }, this.state.page)\n    console.log('ASSETS : ', assets);\n    this.setState({ assets, total : count});\n  }\n\n  paginateTo(page) {\n    this.setState({ orders: undefined, page }, () => this.fetchData())\n  }\n\n  toggleSide(side) {\n    if (this.state.side === side) {\n      side = undefined\n    }\n    this.setState({\n      orders: undefined,\n      side,\n      onlyForMe: undefined\n    }, () => this.fetchData())\n  }\n\n  async toggleForMe() {\n    const { accountAddress } = this.props\n    if (!accountAddress) {\n      await connectWallet()\n    }\n    const { onlyForMe } = this.state\n    this.setState( {\n      orders: undefined,\n      onlyForMe: !onlyForMe,\n      onlyByMe: false,\n      // Doesn't make sense to show sell orders the user makes\n      side: onlyForMe ? undefined : OrderSide.Buy,\n    }, () => this.fetchData())\n  }\n\n  toggleBundles() {\n    const { onlyBundles } = this.state\n    this.setState( {\n      orders: undefined,\n      onlyBundles: !onlyBundles,\n      onlyByMe: false,\n      // Only sell-side for now\n      side: OrderSide.Sell,\n    }, () => this.fetchData())\n  }\n\n  async toggleByMe() {\n    const { accountAddress } = this.props\n    if (!accountAddress) {\n      await connectWallet()\n    }\n    const { onlyByMe } = this.state\n    this.setState( {\n      orders: undefined,\n      onlyByMe: !onlyByMe,\n      onlyForMe: false\n    }, () => this.fetchData())\n  }\n\n  renderPagination() {\n    const { page, total } = this.state\n    const ordersPerPage = this.props.seaport.api.pageSize\n    const noMorePages = page*ordersPerPage >= total\n    console.log('ici : ' + total)\n    return (\n      <nav>\n        <ul className=\"pagination justify-content-center\">\n          <li className={\"page-item \" + (page === 1 ? \"disabled\" : \"\")}>\n            <a className=\"page-link\" href=\"#Log\"\n              onClick={() => this.paginateTo(page - 1)} tabIndex=\"-1\">\n              Previous\n            </a>\n          </li>\n          <li className={\"page-item \" + (noMorePages ? \"disabled\" : \"\")}>\n            <a className=\"page-link\" href=\"#Log\"\n              onClick={() => this.paginateTo(page + 1)}>\n              Next\n            </a>\n          </li>\n        </ul>\n      </nav>\n    )\n  }\n\n  renderFilters() {\n    const { onlyByMe, onlyForMe, onlyBundles } = this.state\n    const sellSide = this.state.side === OrderSide.Sell\n    const buySide = this.state.side === OrderSide.Buy\n\n    return (\n      <div className=\"row\">\n        <div className=\"mb-3 ml-4\">\n          Filter orderbook:\n          <div className=\"btn-group ml-4\" role=\"group\">\n            <button type=\"button\" className={\"btn btn-outline-primary \" + (sellSide ? \"active\" : \"\")} data-toggle=\"button\" onClick={() => this.toggleSide(OrderSide.Sell)}>\n              Auctions\n            </button>\n            <button type=\"button\" className={\"btn btn-outline-success \" + (buySide ? \"active\" : \"\")} data-toggle=\"button\" onClick={() => this.toggleSide(OrderSide.Buy)}>\n              Bids\n            </button>\n          </div>\n        </div>\n        <div className=\"mb-3 ml-4\">\n          <div className=\"btn-group\" role=\"group\">\n            <button type=\"button\" className={\"btn btn-outline-secondary \" + (onlyForMe ? \"active\" : \"\")} data-toggle=\"button\" onClick={() => this.toggleForMe()}>\n              For Me\n            </button>\n            <button type=\"button\" className={\"btn btn-outline-secondary \" + (onlyByMe ? \"active\" : \"\")} data-toggle=\"button\" onClick={() => this.toggleByMe()}>\n              By Me\n            </button>\n          </div>\n        </div>\n        <div className=\"mb-3 ml-4\">\n          <button type=\"button\" className={\"btn btn-outline-info \" + (onlyBundles ? \"active\" : \"\")} data-toggle=\"button\" onClick={() => this.toggleBundles()}>\n            Bundles\n          </button>\n        </div>\n      </div>\n    )\n  }\n\n  render() {\n    const { orders } = this.state\n    const { assets } = this.state\n    return (\n      <div className=\"container py-3\" id=\"Log\">\n        {assets != null\n        \n          ? <React.Fragment>\n              <Header>\n                <div class=\"title-section\">\n                  <h2>Recent activity</h2>\n                </div>\n              </Header>\n              <div className=\"card-deck\">\n                {assets.map((asset, i) => {\n                  if(i <= 2)\n                    return <Asset {...this.props} key={i} asset={asset}  />\n                })}\n              </div>\n            </React.Fragment>\n\n          : <div className=\"text-center\">Loading...</div>\n        }\n\n        {/*orders != null\n        \n        ? <React.Fragment>\n            <Header>\n              <div class=\"title-section\">\n                <h2>Recent activity</h2>\n              </div>\n            </Header>\n            <div className=\"card-deck\">\n              {orders.map((order, i) => {\n                if(i <= 2)\n                  return <Order {...this.props} key={i} order={order}  />\n              })}\n            </div>\n          </React.Fragment>\n\n        : <div className=\"text-center\">Loading...</div>\n            */}\n      </div>\n    )\n  }\n}\n\nconst Header = styled.header`\n  width : 100%;\n  text-align : center;\n  padding-bottom : 20px;\n  padding-top : 20px;\n`\nconst Section = styled.section`\n  width : 100%;\n  text-align : justify;\n  padding-bottom : 40px;\n\n  h2{\n    text-align : center;\n    padding-bottom : 20px;\n    padding-top : 20px;\n  }\n`\n","import React from 'react'\nimport './index.css';\n\n\nexport default class Header extends React.Component {\n\n  render(){\n    return(\n      <div></div>\n    )\n  }\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport Log from '../../Log';\nimport Header from '../../Header';\nimport { OpenSeaPort, Network } from 'opensea-js';\nimport { web3Provider, onNetworkUpdate, OPENSEA_JS_URL, GITHUB_URL } from '../../../constants';\n\nexport default class Home extends React.Component {\n\n  state = {\n    accountAddress: null\n  }\n\n  constructor(props) {\n    super(props)\n    this.onChangeAddress()\n    onNetworkUpdate(this.onChangeAddress)\n  }\n\n  onChangeAddress = () => {\n    this.seaport = new OpenSeaPort(web3Provider, {\n      networkName: Network.Main\n    })\n    this.web3 = this.seaport.web3\n    this.web3.eth.getAccounts((err, res) => {\n      this.setState({\n        accountAddress: res[0]\n      })\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <main>\n          <Section>\n          <div class=\"how-section\">\n            <div class=\"four-col\">\n              <h2>How to collect digital art ?</h2>\n            </div>\n            <div class=\"four-col\">\n              <h4>DISCOVER TOKENIZED DIGITAL ART.</h4>\n              <p>Artists issue authenticated single edition digital artworks. These are certified on the Ethereum blockchain to prevent forgery and provide historical provenance.</p>\n            </div>\n            <div class=\"four-col\">\n              <h4>BUYING & SELLING</h4>\n              <p>Purchase at the asking price or make an offer by placing a bid. Once you own a piece you can resell it in the secondary market to other collectors.</p>\n            </div>\n            <div class=\"four-col\">\n              <h4>SHOWCASE YOUR COLLECTION</h4>\n              <p>Customize your profile to show off your art collection to patrons around the world. Display your works in a VR gallery, digital display, or anywhere else you like.</p>\n            </div>\n          </div>\n          </Section>\n          <Log\n            seaport={this.seaport}\n            accountAddress={this.state.accountAddress} />\n          <Section>\n            <div class=\"title-section\">\n              <h2>About me</h2>\n            </div>\n            <div class=\"about-section\">\n              <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi semper quam nec orci semper, in aliquet diam tempor. \n                Donec erat mauris, facilisis interdum pulvinar non, dapibus nec ipsum. Maecenas imperdiet pharetra ornare. \n                Fusce imperdiet mi sed mattis ornare. Praesent gravida lacus ipsum, in facilisis tortor sodales nec. In laoreet finibus lorem, laoreet tincidunt purus. \n                Nunc in quam ut diam vulputate condimentum. Nam sit amet dolor posuere lorem volutpat mattis vitae sit amet nisl. Donec vestibulum volutpat pulvinar. \n                Nulla facilisi. Vestibulum ultrices tempus nibh non facilisis. Vestibulum id accumsan metus.</p>\n              <p>\n              Ut ultrices tincidunt velit, ut interdum odio auctor non. Donec a urna mi. Integer congue semper turpis at feugiat. \n              Fusce et arcu vitae lacus interdum fermentum nec ac lectus. Fusce cursus neque est, id tempus lacus ultrices vitae. Vestibulum in hendrerit elit, at dictum nisi. \n              Cras pulvinar, justo rutrum mattis pulvinar, sapien odio accumsan magna, nec tincidunt nulla ligula id orci. Mauris non sem magna.\n              </p>\n          </div>\n        </Section>\n        </main>\n      </div>\n    )\n  }\n}\n\nconst ImgRibbon = styled.img`\n  width: 150px;\n  position: absolute;\n  top: 0;\n  right: 0;\n  border: 0;\n\n  @media(max-width: 600px) {\n    width: 80px;\n  }\n`\n\nconst Section = styled.section`\n  .how-section{\n    padding-top : 60px;\n    width : 80%;\n    margin : auto;\n  }\n  .four-col{\n    width : 25%;\n    display : inline-block;\n    padding : 20px;\n    height : 100%;\n    vertical-align : top;\n  }\n  .four-col h4{\n    vertical-align : top;\n    font-size : 8pt;\n    color : #000;\n    font-weight : 700;\n  }\n`","import React from 'react';\nimport styled from 'styled-components';\nimport Log from '../../Log';\nimport Header from '../../Header';\nimport { OpenSeaPort, Network } from 'opensea-js';\nimport { web3Provider, onNetworkUpdate, OPENSEA_JS_URL, GITHUB_URL } from '../../../constants';\n\nexport default class MyArt extends React.Component {\n\n  render() {\n    return (\n      <div>\n        <main>\n\n        </main>\n      </div>\n    )\n  }\n}\n\n","import React from 'react';\nimport styled from 'styled-components';\nimport Log from '../../Log';\nimport Header from '../../Header';\nimport { OpenSeaPort, Network } from 'opensea-js';\nimport { web3Provider, onNetworkUpdate, OPENSEA_JS_URL, GITHUB_URL } from '../../../constants';\n\nexport default class Collectibles extends React.Component {\n\n  state = {\n    accountAddress: null\n  }\n\n  constructor(props) {\n    super(props)\n    this.onChangeAddress()\n    onNetworkUpdate(this.onChangeAddress)\n  }\n\n  onChangeAddress = () => {\n    this.seaport = new OpenSeaPort(web3Provider, {\n      networkName: Network.Main\n    })\n    this.web3 = this.seaport.web3\n    this.web3.eth.getAccounts((err, res) => {\n      this.setState({\n        accountAddress: res[0]\n      })\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <main>\n          <Section>\n          <div class=\"how-section\">\n            <div class=\"four-col\">\n              <h2>How to collect digital art ?</h2>\n            </div>\n            <div class=\"four-col\">\n              <h4>DISCOVER TOKENIZED DIGITAL ART.</h4>\n              <p>Artists issue authenticated single edition digital artworks. These are certified on the Ethereum blockchain to prevent forgery and provide historical provenance.</p>\n            </div>\n            <div class=\"four-col\">\n              <h4>BUYING & SELLING</h4>\n              <p>Purchase at the asking price or make an offer by placing a bid. Once you own a piece you can resell it in the secondary market to other collectors.</p>\n            </div>\n            <div class=\"four-col\">\n              <h4>SHOWCASE YOUR COLLECTION</h4>\n              <p>Customize your profile to show off your art collection to patrons around the world. Display your works in a VR gallery, digital display, or anywhere else you like.</p>\n            </div>\n          </div>\n          </Section>\n          <Log\n            seaport={this.seaport}\n            accountAddress={this.state.accountAddress} />\n        </main>\n      </div>\n    )\n  }\n}\n\nconst ImgRibbon = styled.img`\n  width: 150px;\n  position: absolute;\n  top: 0;\n  right: 0;\n  border: 0;\n\n  @media(max-width: 600px) {\n    width: 80px;\n  }\n`\n\nconst Section = styled.section`\n  .how-section{\n    padding-top : 60px;\n    width : 80%;\n    margin : auto;\n  }\n  .four-col{\n    width : 25%;\n    display : inline-block;\n    padding : 20px;\n    height : 100%;\n    vertical-align : top;\n  }\n  .four-col h4{\n    vertical-align : top;\n    font-size : 8pt;\n    color : #000;\n    font-weight : 700;\n  }\n`","import React from 'react';\nimport styled from 'styled-components';\nimport Log from '../../Log';\nimport Header from '../../Header';\nimport { OpenSeaPort, Network } from 'opensea-js';\nimport { web3Provider, onNetworkUpdate, OPENSEA_JS_URL, GITHUB_URL } from '../../../constants';\n\nexport default class Contact extends React.Component {\n\n  state = {\n    accountAddress: null\n  }\n\n  constructor(props) {\n    super(props)\n    this.onChangeAddress()\n    onNetworkUpdate(this.onChangeAddress)\n  }\n\n  onChangeAddress = () => {\n    this.seaport = new OpenSeaPort(web3Provider, {\n      networkName: Network.Main\n    })\n    this.web3 = this.seaport.web3\n    this.web3.eth.getAccounts((err, res) => {\n      this.setState({\n        accountAddress: res[0]\n      })\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <main>\n          <Section>\n          <div class=\"how-section\">\n            <div class=\"four-col\">\n              <h2>How to collect digital art ?</h2>\n            </div>\n            <div class=\"four-col\">\n              <h4>DISCOVER TOKENIZED DIGITAL ART.</h4>\n              <p>Artists issue authenticated single edition digital artworks. These are certified on the Ethereum blockchain to prevent forgery and provide historical provenance.</p>\n            </div>\n            <div class=\"four-col\">\n              <h4>BUYING & SELLING</h4>\n              <p>Purchase at the asking price or make an offer by placing a bid. Once you own a piece you can resell it in the secondary market to other collectors.</p>\n            </div>\n            <div class=\"four-col\">\n              <h4>SHOWCASE YOUR COLLECTION</h4>\n              <p>Customize your profile to show off your art collection to patrons around the world. Display your works in a VR gallery, digital display, or anywhere else you like.</p>\n            </div>\n          </div>\n          </Section>\n          <Log\n            seaport={this.seaport}\n            accountAddress={this.state.accountAddress} />\n        </main>\n      </div>\n    )\n  }\n}\n\nconst ImgRibbon = styled.img`\n  width: 150px;\n  position: absolute;\n  top: 0;\n  right: 0;\n  border: 0;\n\n  @media(max-width: 600px) {\n    width: 80px;\n  }\n`\n\nconst Section = styled.section`\n  .how-section{\n    padding-top : 60px;\n    width : 80%;\n    margin : auto;\n  }\n  .four-col{\n    width : 25%;\n    display : inline-block;\n    padding : 20px;\n    height : 100%;\n    vertical-align : top;\n  }\n  .four-col h4{\n    vertical-align : top;\n    font-size : 8pt;\n    color : #000;\n    font-weight : 700;\n  }\n`","import React from 'react';\nimport Home from '../pages/Home';\nimport MyArt from '../pages/MyArt';\nimport Collectibles from '../pages/Collectibles';\nimport Contact from '../pages/Contact';\nimport { Switch, Route } from 'react-router-dom';\n\n\nexport default class Main extends React.Component {\n\n  render() {\n\n    return (\n      <div>\n        <Switch>\n          <Route exact path='/' component={Home}></Route>\n          <Route exact path='/MyArt' component={MyArt}></Route>\n          <Route exact path='/Collectibles' component={Collectibles}></Route>\n          <Route exact path='/Contact' component={Contact}></Route>\n        </Switch>\n      </div>\n    )\n  }\n}","import React from 'react'\nimport styled from 'styled-components';\nimport { NavLink }  from 'react-router-dom';\nimport { OrderSide } from 'opensea-js/lib/types';\n\n\n\nexport default class Navigation extends React.Component {\n\n  render(){\n    return(\n      <nav>\n        <ul>\n          <li><NavLink to=\"/\">Home</NavLink></li>\n          <li><NavLink to=\"/MyArt\">My Art</NavLink></li>\n          <li><NavLink to=\"/Collectibles\">Collectibles</NavLink></li>\n          <li><NavLink to=\"/Contact\">Contact</NavLink></li>\n        </ul>\n      </nav>\n    )\n  }\n}\n","import React from 'react';\nimport Main from '../Main';\nimport Navigation from '../Navigation';\n\nexport default class App extends React.Component {\n\n  render() {\n    return (\n      <div>\n        <Navigation />\n        <Main />\n      </div>\n    )\n  }\n}","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from 'react-router-dom';\nimport App from './components/App';\nimport './index.css';\nimport { GOOGLE_ANALYTICS_ID } from './constants';\nimport registerServiceWorker from './registerServiceWorker';\n\n// Google Analytics loading\nif (process.env.NODE_ENV === \"production\") {\n  window.dataLayer = window.dataLayer || [];\n  function gtag(){window.dataLayer.push(arguments);}\n  gtag('js', new Date());\n  gtag('config', GOOGLE_ANALYTICS_ID);\n} else {\n  console.info(\"Not loading Google Analytics in \" + process.env.NODE_ENV + \" environment\")\n}\n\n// Main render action\nReactDOM.render((\n<BrowserRouter>\n  <App />\n</BrowserRouter>\n), document.getElementById('root'));\nregisterServiceWorker();"],"sourceRoot":""}